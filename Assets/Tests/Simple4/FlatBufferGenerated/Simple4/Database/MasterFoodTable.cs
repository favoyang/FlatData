// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace FlatBufferGenerated.Simple4.Database
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct MasterFoodTable : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static MasterFoodTable GetRootAsMasterFoodTable(ByteBuffer _bb) { return GetRootAsMasterFoodTable(_bb, new MasterFoodTable()); }
  public static MasterFoodTable GetRootAsMasterFoodTable(ByteBuffer _bb, MasterFoodTable obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public MasterFoodTable __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public FlatBufferGenerated.Simple4.Database.FoodProfit? FoodProfitCollection(int j) { int o = __p.__offset(4); return o != 0 ? (FlatBufferGenerated.Simple4.Database.FoodProfit?)(new FlatBufferGenerated.Simple4.Database.FoodProfit()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int FoodProfitCollectionLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }
  public FlatBufferGenerated.Simple4.Database.FoodData? FoodDataCollection(int j) { int o = __p.__offset(6); return o != 0 ? (FlatBufferGenerated.Simple4.Database.FoodData?)(new FlatBufferGenerated.Simple4.Database.FoodData()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int FoodDataCollectionLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<FlatBufferGenerated.Simple4.Database.MasterFoodTable> CreateMasterFoodTable(FlatBufferBuilder builder,
      VectorOffset FoodProfitCollectionOffset = default(VectorOffset),
      VectorOffset FoodDataCollectionOffset = default(VectorOffset)) {
    builder.StartTable(2);
    MasterFoodTable.AddFoodDataCollection(builder, FoodDataCollectionOffset);
    MasterFoodTable.AddFoodProfitCollection(builder, FoodProfitCollectionOffset);
    return MasterFoodTable.EndMasterFoodTable(builder);
  }

  public static void StartMasterFoodTable(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddFoodProfitCollection(FlatBufferBuilder builder, VectorOffset FoodProfitCollectionOffset) { builder.AddOffset(0, FoodProfitCollectionOffset.Value, 0); }
  public static VectorOffset CreateFoodProfitCollectionVector(FlatBufferBuilder builder, Offset<FlatBufferGenerated.Simple4.Database.FoodProfit>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateFoodProfitCollectionVectorBlock(FlatBufferBuilder builder, Offset<FlatBufferGenerated.Simple4.Database.FoodProfit>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartFoodProfitCollectionVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddFoodDataCollection(FlatBufferBuilder builder, VectorOffset FoodDataCollectionOffset) { builder.AddOffset(1, FoodDataCollectionOffset.Value, 0); }
  public static VectorOffset CreateFoodDataCollectionVector(FlatBufferBuilder builder, Offset<FlatBufferGenerated.Simple4.Database.FoodData>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateFoodDataCollectionVectorBlock(FlatBufferBuilder builder, Offset<FlatBufferGenerated.Simple4.Database.FoodData>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartFoodDataCollectionVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<FlatBufferGenerated.Simple4.Database.MasterFoodTable> EndMasterFoodTable(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<FlatBufferGenerated.Simple4.Database.MasterFoodTable>(o);
  }
};


}
