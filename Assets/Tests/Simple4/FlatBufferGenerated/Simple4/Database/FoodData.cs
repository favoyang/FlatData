// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace FlatBufferGenerated.Simple4.Database
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct FoodData : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static FoodData GetRootAsFoodData(ByteBuffer _bb) { return GetRootAsFoodData(_bb, new FoodData()); }
  public static FoodData GetRootAsFoodData(ByteBuffer _bb, FoodData obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public FoodData __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public FlatBufferGenerated.Simple4.Database.EFoodType Type { get { int o = __p.__offset(4); return o != 0 ? (FlatBufferGenerated.Simple4.Database.EFoodType)__p.bb.Get(o + __p.bb_pos) : FlatBufferGenerated.Simple4.Database.EFoodType.Donut; } }
  public bool MutateType(FlatBufferGenerated.Simple4.Database.EFoodType Type) { int o = __p.__offset(4); if (o != 0) { __p.bb.Put(o + __p.bb_pos, (byte)Type); return true; } else { return false; } }
  public string Name { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNameBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetNameArray() { return __p.__vector_as_array<byte>(6); }
  public FlatBufferGenerated.Simple4.Database.ECountry Country { get { int o = __p.__offset(8); return o != 0 ? (FlatBufferGenerated.Simple4.Database.ECountry)__p.bb.Get(o + __p.bb_pos) : FlatBufferGenerated.Simple4.Database.ECountry.NewYork; } }
  public bool MutateCountry(FlatBufferGenerated.Simple4.Database.ECountry Country) { int o = __p.__offset(8); if (o != 0) { __p.bb.Put(o + __p.bb_pos, (byte)Country); return true; } else { return false; } }
  public FlatBufferGenerated.Simple4.Database.ERestaurant Restaurant { get { int o = __p.__offset(10); return o != 0 ? (FlatBufferGenerated.Simple4.Database.ERestaurant)__p.bb.Get(o + __p.bb_pos) : FlatBufferGenerated.Simple4.Database.ERestaurant.Donut; } }
  public bool MutateRestaurant(FlatBufferGenerated.Simple4.Database.ERestaurant Restaurant) { int o = __p.__offset(10); if (o != 0) { __p.bb.Put(o + __p.bb_pos, (byte)Restaurant); return true; } else { return false; } }
  public int LevelUnlock { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public bool MutateLevelUnlock(int LevelUnlock) { int o = __p.__offset(12); if (o != 0) { __p.bb.PutInt(o + __p.bb_pos, LevelUnlock); return true; } else { return false; } }
  public FlatBufferGenerated.Simple4.Database.EProfitFoodType ProfitType { get { int o = __p.__offset(14); return o != 0 ? (FlatBufferGenerated.Simple4.Database.EProfitFoodType)__p.bb.Get(o + __p.bb_pos) : FlatBufferGenerated.Simple4.Database.EProfitFoodType.TypeA; } }
  public bool MutateProfitType(FlatBufferGenerated.Simple4.Database.EProfitFoodType ProfitType) { int o = __p.__offset(14); if (o != 0) { __p.bb.Put(o + __p.bb_pos, (byte)ProfitType); return true; } else { return false; } }

  public static Offset<FlatBufferGenerated.Simple4.Database.FoodData> CreateFoodData(FlatBufferBuilder builder,
      FlatBufferGenerated.Simple4.Database.EFoodType Type = FlatBufferGenerated.Simple4.Database.EFoodType.Donut,
      StringOffset NameOffset = default(StringOffset),
      FlatBufferGenerated.Simple4.Database.ECountry Country = FlatBufferGenerated.Simple4.Database.ECountry.NewYork,
      FlatBufferGenerated.Simple4.Database.ERestaurant Restaurant = FlatBufferGenerated.Simple4.Database.ERestaurant.Donut,
      int LevelUnlock = 0,
      FlatBufferGenerated.Simple4.Database.EProfitFoodType ProfitType = FlatBufferGenerated.Simple4.Database.EProfitFoodType.TypeA) {
    builder.StartTable(6);
    FoodData.AddLevelUnlock(builder, LevelUnlock);
    FoodData.AddName(builder, NameOffset);
    FoodData.AddProfitType(builder, ProfitType);
    FoodData.AddRestaurant(builder, Restaurant);
    FoodData.AddCountry(builder, Country);
    FoodData.AddType(builder, Type);
    return FoodData.EndFoodData(builder);
  }

  public static void StartFoodData(FlatBufferBuilder builder) { builder.StartTable(6); }
  public static void AddType(FlatBufferBuilder builder, FlatBufferGenerated.Simple4.Database.EFoodType Type) { builder.AddByte(0, (byte)Type, 1); }
  public static void AddName(FlatBufferBuilder builder, StringOffset NameOffset) { builder.AddOffset(1, NameOffset.Value, 0); }
  public static void AddCountry(FlatBufferBuilder builder, FlatBufferGenerated.Simple4.Database.ECountry Country) { builder.AddByte(2, (byte)Country, 1); }
  public static void AddRestaurant(FlatBufferBuilder builder, FlatBufferGenerated.Simple4.Database.ERestaurant Restaurant) { builder.AddByte(3, (byte)Restaurant, 1); }
  public static void AddLevelUnlock(FlatBufferBuilder builder, int LevelUnlock) { builder.AddInt(4, LevelUnlock, 0); }
  public static void AddProfitType(FlatBufferBuilder builder, FlatBufferGenerated.Simple4.Database.EProfitFoodType ProfitType) { builder.AddByte(5, (byte)ProfitType, 1); }
  public static Offset<FlatBufferGenerated.Simple4.Database.FoodData> EndFoodData(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<FlatBufferGenerated.Simple4.Database.FoodData>(o);
  }
};


}
